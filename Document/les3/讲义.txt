这次课程是这回课程的最后一部分，主要讲Unity的框架搭建。前两节课的内容大概跟大家说了下Unity内部的一些机制主要集中在渲染这块，告诉大家Unity其实本质也就那样。
第二节课的内容跟大家说了下设计模式的基础内容。第三节课呢？我们要结合前面两节课讲的内容。搭一个框架。

搭框架有啥用呢？本质的原因是复用，引擎是基础组件的复用，框架是业务逻辑层复用。

在制作游戏中，有几个东西是难免会涉及到的。UI管理，资源管理，资源管理里面包含了 加载卸载的机制管理，内存的管理。声音的管理，场景管理 网络管理等等一系列的内容。

大家会问，Unity都提供这些了，干嘛还得弄啊。比如Unity 都提供了，UI系统，UGUI，而且商店里面也有NGUI这样的插件，直接用就好了嘛。

这里我要说明的是，组件和框架的区别。Unity 提供的UGUI里面提供了各种组件，但是有些组件不是很满足工作上需求。并且，UGUI只提供了组件，但是对于整个界面的管理是没有。
比如多个界面存着的时候，他的行为是如何，是叠加还是隐藏前面的。帮忙处理一些重复的工作，这样的行为都需要UI控制系统。

2.再讲整个框架搭建之前，最基础是搞定目录。
Assets Unity总的资源目录，脚本也可以认为是资源的一种也需要放在这个目录下。大家应该也不会把资源放在其他外面。

Editor EditorDefault Resoucres Gizmos 这个三个目录都是给编辑器相关用的，从字面上看 Editor Default Resources 
目录是放编辑器资源用的，比如你编辑器需要一个图标都需要放在这个目录下面。
Gizmos 文件夹是放 为了 场景编辑器图片模型资源的目录，大家可能比较少用

说下Editor目录 Unity虽然支持一个Asset 目录下面放多个，而且层级可以放得很深。但是我推荐的把编辑器相关的放在一个目录里面，每个目录根据用途再细分。
最怕编辑器里面加了一个功能要删除的时候 都不知道去哪里找。

Resources目录大家最常用的目录，里面可以放一些资源东西，可以直接通过Resource接口访问，这个目录也是可以支持多个。但是我也是推荐大家只建立一个，再根据资源的类型分类。

Plugins插件目录，如果大家用其他原生的语言了写了类库或者第三方的类库，可以放在这个目录当中。要不然会访问不到

Standard Assets 这个目录字面意思标准资源目录，我们通过Unity Asset Package 导入的默认就放在这里

StreamingAssets 目录这个目录很特殊，它跟Resources目录不一样的一点，他会内部的资源 不做任何处理的导入到游戏中，你可以放任何东西。
全部可以由程序自己控制。

这里我也简单的弄个目录大家看下，后期调整大家可以根据具体项目要求。

3.

